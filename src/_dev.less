
/*################################*\
    legacy  |  _dev.less
\*################################*/


// Extension of `.o-Flex`
//
// ^author
// : Chris Harvey
// ^updated
// : 2017-04-13
.o-Flex--siteHead {
  margin: @g-vru 0; // HACK fallback
  margin: var(--vru) 0;
  .flex-align-items(center);
  @media not all and (min-width: 45em) {
    .flex-direction(column);
  }
}

// Extensions of `.o-Flex__Item`
// [1] NOTE: equivalent to .flex(0 0 var(--site-logo-width));
//     but now works when flex-direction = column
//     (cannot use `flex` to set width if flex-direction=column)
//
//--siteLogo      - container for the site logo
//--siteTitles    - container for `.c-ConferenceTitles` component
//--footerContent - container for content in footer
// ^author
// : Chris Harvey
// ^updated
// : 2017-04-13
.o-Flex__Item--siteLogo {
  .flex(0 0 auto);
  width: 6rem; // HACK fallback // maximum possible --site-logo-width
  width: var(--site-logo-width); // [1]
  @media screen and (min-width: 45em) {
    margin: 0 2rem;
  }
}
.o-Flex__Item--siteTitles {
  @media screen and (min-width: 45em) {
    margin-right: 8rem; // HACK fallback // maximum possible --year-badge-width
    margin-right: calc(~'0.5 * var(--year-badge-width)');
  }
}
.o-Flex__Item--footerContent {
  margin: 0 1rem;
  #panel-current & {
    // copied from `.o-Flex`
    .flexbox();
    .flex-justify-content(space-between);
    & > * {
      // copied from `.o-Flex__Item`
      .flex(auto);
    }
  }
}




// Extensions to bangs.less
.-r-1 {
  right: 1rem;
}
@media screen and (min-width: 45em) {
  .-ta-l-sM {
    text-align: left !important;
  }
}
@media not all and (min-width: 45em) {
  .-xd-c-nM {
    .flex-direction(column);
  }
}


// fixes to glyphicons
.glyphicons {
  vertical-align: middle; // undo -va-t
  &::before {
    padding: 0; // unset all padding on all icon characters. use margin/padding on icon itself if you need it.
  }
  &:not(.-fz-norm) {
    font-size: 1.5em;
  }
}
